#!/usr/bin/env python3

import re
import os
import argparse

def extract_and_summarize_warnings(log_file_path):
    pattern = re.compile(r'.*\[WARNING\].*')
    
    warning_logs = []
    
    unprocessed_chromatograms = []
    
    count = 0
    
    output_file_path = os.path.splitext(log_file_path)[0] + '_warnings.log'
    
    with open(log_file_path, 'r') as log_file:
        with open(output_file_path, 'w') as output_file:
            for line in log_file:
                if pattern.match(line):
                    warning_logs.append(line)
                    count += 1
                    
                    match = re.search(r'Skipping... (.+)$', line)
                    if match:
                        unprocessed_chromatograms.append(match.group(1))
                
                if len(warning_logs) >= 1000:
                    output_file.writelines(warning_logs)
                    warning_logs.clear()
            
            if warning_logs:
                output_file.writelines(warning_logs)
            
            output_file.write("\n\n--- Summary ---\n")
            output_file.write("Total WARN messages: {}\n".format(count))
            output_file.write("Unprocessed Chromatograms:\n")
            for identifier in unprocessed_chromatograms:
                output_file.write(f"{identifier}\n")
            
    return f"Extracted {count} warning logs and saved to {output_file_path}"

def main():
    parser = argparse.ArgumentParser(description='Extract and summarize warnings from a log file.')
    parser.add_argument('log_file_path', type=str, help='The path to the log file.')
    args = parser.parse_args()

    print(extract_and_summarize_warnings(args.log_file_path))

if __name__ == "__main__":
    main()
